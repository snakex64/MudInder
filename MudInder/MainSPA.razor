@inject Services.AuthService AuthService
@inject Microsoft.JSInterop.IJSRuntime JsRuntime


<MudThemeProvider IsDarkMode="true" />
<MudDialogProvider />
<MudSnackbarProvider />

@if (LoadingIsMobile)
{
	<MudOverlay Visible="true" DarkBackground="true" Absolute="true">
		<MudProgressCircular Color="Color.Secondary" Indeterminate="true" />
	</MudOverlay>
}
else
{
	<div style="width: 100%; height: 100vh">
		<MudPaper Style="@(IsMobile ? "height: 100%; width: 100%" : "width: 28em; height: 50em; margin-left: auto; margin-right: auto")">
			@if (!AuthService.IsAuthenticated)
			{
				<LoginPage LoginChanged="LoginChanged" />
			}
			else
			{
				<MudStack Style="height: 100%">

					<MudPaper Style="height: 100%">

						@if (CurrentPage == "EditAccount") // sad way of selecting a page. Look away. Everything is fine
						{
							<EditAccountPage />
						}
						else if (CurrentPage == "Search") // I said look away
						{
							<SearchPage />
						}

					</MudPaper>

					<MudAppBar Color="Color.Primary" Dense="true" Style="width: 100%" Fixed="false">
						<MudStack Row="true" Justify="Justify.SpaceEvenly" AlignItems="AlignItems.Center" Style="width: 100%">
							<MudIconButton Icon="@Icons.Filled.ManageSearch" Color="Color.Secondary" OnClick="@(() => CurrentPage = "Search")" />
							<MudIconButton Icon="@Icons.Filled.Person" Color="Color.Inherit" OnClick="@(() => CurrentPage = "EditAccount")" />
						</MudStack>
					</MudAppBar>

				</MudStack>
			}

		</MudPaper>
	</div>
}
@code {

	private string CurrentPage = "Search";

	private bool LoadingIsMobile { get; set; } = true;

	private bool IsMobile { get; set; }


	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		await base.OnAfterRenderAsync(firstRender);

		if(firstRender)
		{
			IsMobile = await JsRuntime.InvokeAsync<bool>("isDevice", new object[0]);
			LoadingIsMobile = false;

			StateHasChanged();
		}
	}

	private void LoginChanged()
	{
		StateHasChanged();
	}
}